name: Docker Octave images

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_octave:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [4]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: build-octave-${{ matrix.version }}.docker
          build-args: |
            OCTAVE_VERSION=${{ matrix.version }}
          push: true
          tags: suever/octave-build:${{ matrix.version }}


  # Add a new Octave release to this list and update OCTAVE_LATEST!
  octave:
    runs-on: ubuntu-latest
    needs: build_octave
    strategy:
      matrix:
        version:
        - 4.2.2
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Determine build image
        run: |
          VER=${{ matrix.version }}
          BUILD_VER=${VER%%.*}
          ## Exception, because of too old libraries.
          if [ "$VER" = "4.4.0" ] || [ "$VER" = "4.4.1" ]; then
            BUILD_VER=5
          fi
          echo "OCTAVE_BUILD_IMG=$BUILD_VER" >> $GITHUB_ENV
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: octave-${{ env.OCTAVE_BUILD_IMG }}.docker
          build-args: |
            OCTAVE_VERSION=${{ matrix.version }}
          push: true
          tags: suever/octave:${{ matrix.version }}
